---
# tasks/common/install_kubernetes.yml

- name: Install Kubernetes packages based on architecture
  ansible.builtin.package:
    name:
      - "{{ arch_packages[ansible_architecture].kubelet }}"
      - "{{ arch_packages[ansible_architecture].kubeadm }}"
      - "{{ arch_packages[ansible_architecture].kubectl }}"
    state: present
    allow_downgrade: true
    update_cache: true
  become: true

- name: Enable and start kubelet
  ansible.builtin.systemd:
    name: kubelet
    enabled: true
    state: started
  become: true

- name: Disable swap
  ansible.builtin.command:
    cmd: swapoff -a
  become: true
  when: ansible_swaptotal_mb > 0
  changed_when: false

- name: Ensure swap is disabled in /etc/fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(.*swap.*)$'
    replace: '#\1'
  become: true

- name: Initialize Kubernetes cluster
  ansible.builtin.command:
    cmd: kubeadm init --kubernetes-version {{ kubernetes_version }} --pod-network-cidr={{ pod_network_cidr }}
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init
  become: true
  failed_when: kubeadm_init.rc != 0 and "'already exists'" not in kubeadm_init.stderr

- name: Create .kube directory for admin user
  ansible.builtin.file:
    path: "/home/{{ k8s_admin_user }}/.kube"
    state: directory
    owner: "{{ k8s_admin_user }}"
    group: "{{ k8s_admin_user }}"
    mode: '0755'
  become: true
  when: kubeadm_init.rc == 0

- name: Copy admin.conf to user's kube config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ k8s_admin_user }}/.kube/config"
    owner: "{{ k8s_admin_user }}"
    group: "{{ k8s_admin_user }}"
    mode: '0644'
  become: true
  when: kubeadm_init.rc == 0
